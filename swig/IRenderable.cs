//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IRenderable : IMoveable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal IRenderable(global::System.IntPtr cPtr, bool cMemoryOwn) : base(IronSightEnginePINVOKE.IRenderable_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IRenderable obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IRenderable() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          IronSightEnginePINVOKE.delete_IRenderable(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public bool autorenderenabled {
    set {
      IronSightEnginePINVOKE.IRenderable_autorenderenabled_set(swigCPtr, value);
    } 
    get {
      bool ret = IronSightEnginePINVOKE.IRenderable_autorenderenabled_get(swigCPtr);
      return ret;
    } 
  }

  public virtual void Render(RenderType rendertype) {
    IronSightEnginePINVOKE.IRenderable_Render(swigCPtr, (int)rendertype);
  }

  public virtual bool GetRefPos(Vector3 pos) {
    bool ret = IronSightEnginePINVOKE.IRenderable_GetRefPos(swigCPtr, Vector3.getCPtr(pos));
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual Result GetRegisteredClasses(SWIGTYPE_p_GETREGISTEREDCLASSES_CALLBACK cbk, SWIGTYPE_p_void cbkuser, RenderType rendertype) {
		Result ret = new Result(IronSightEnginePINVOKE.IRenderable_GetRegisteredClasses(swigCPtr, SWIGTYPE_p_GETREGISTEREDCLASSES_CALLBACK.getCPtr(cbk), SWIGTYPE_p_void.getCPtr(cbkuser), (int)rendertype), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual IObject GetObject() {
		global::System.IntPtr cPtr = IronSightEnginePINVOKE.IRenderable_GetObject(swigCPtr);
		//
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		IObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new IObject(cPtr, false);
		return ret;
	}

}
