//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class SamplerRendererDesc : RendererDesc {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SamplerRendererDesc(global::System.IntPtr cPtr, bool cMemoryOwn) : base(IronSightEnginePINVOKE.SamplerRendererDesc_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SamplerRendererDesc obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~SamplerRendererDesc() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          IronSightEnginePINVOKE.delete_SamplerRendererDesc(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public SamplerRendererDesc() : this(IronSightEnginePINVOKE.new_SamplerRendererDesc(), true) {
  }

  public SamplerDesc sampler {
    set {
      IronSightEnginePINVOKE.SamplerRendererDesc_sampler_set(swigCPtr, SamplerDesc.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = IronSightEnginePINVOKE.SamplerRendererDesc_sampler_get(swigCPtr);
      SamplerDesc ret = (cPtr == global::System.IntPtr.Zero) ? null : new SamplerDesc(cPtr, false);
      return ret;
    } 
  }

  public SurfaceIntegratorDesc surfaceintegrator {
    set {
      IronSightEnginePINVOKE.SamplerRendererDesc_surfaceintegrator_set(swigCPtr, SurfaceIntegratorDesc.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = IronSightEnginePINVOKE.SamplerRendererDesc_surfaceintegrator_get(swigCPtr);
      SurfaceIntegratorDesc ret = (cPtr == global::System.IntPtr.Zero) ? null : new SurfaceIntegratorDesc(cPtr, false);
      return ret;
    } 
  }

  public VolumeIntegratorDesc volumeintegrator {
    set {
      IronSightEnginePINVOKE.SamplerRendererDesc_volumeintegrator_set(swigCPtr, VolumeIntegratorDesc.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = IronSightEnginePINVOKE.SamplerRendererDesc_volumeintegrator_get(swigCPtr);
      VolumeIntegratorDesc ret = (cPtr == global::System.IntPtr.Zero) ? null : new VolumeIntegratorDesc(cPtr, false);
      return ret;
    } 
  }

  public bool visualizeobjectids {
    set {
      IronSightEnginePINVOKE.SamplerRendererDesc_visualizeobjectids_set(swigCPtr, value);
    } 
    get {
      bool ret = IronSightEnginePINVOKE.SamplerRendererDesc_visualizeobjectids_get(swigCPtr);
      return ret;
    } 
  }

}
