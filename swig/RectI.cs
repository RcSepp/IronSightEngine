//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class RectI : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal RectI(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(RectI obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~RectI() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          IronSightEnginePINVOKE.delete_RectI(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PointI location {
    set {
      IronSightEnginePINVOKE.RectI_location_set(swigCPtr, PointI.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = IronSightEnginePINVOKE.RectI_location_get(swigCPtr);
      PointI ret = (cPtr == global::System.IntPtr.Zero) ? null : new PointI(cPtr, false);
      return ret;
    } 
  }

  public SizeI size {
    set {
      IronSightEnginePINVOKE.RectI_size_set(swigCPtr, SizeI.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = IronSightEnginePINVOKE.RectI_size_get(swigCPtr);
      SizeI ret = (cPtr == global::System.IntPtr.Zero) ? null : new SizeI(cPtr, false);
      return ret;
    } 
  }

  public RectI() : this(IronSightEnginePINVOKE.new_RectI__SWIG_0(), true) {
  }

  public RectI(int x, int y, int width, int height) : this(IronSightEnginePINVOKE.new_RectI__SWIG_1(x, y, width, height), true) {
  }

  public RectI(RectI rect) : this(IronSightEnginePINVOKE.new_RectI__SWIG_2(RectI.getCPtr(rect)), true) {
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public RectI(PointI pos, SizeI size) : this(IronSightEnginePINVOKE.new_RectI__SWIG_3(PointI.getCPtr(pos), SizeI.getCPtr(size)), true) {
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public RectI(int width, int height) : this(IronSightEnginePINVOKE.new_RectI__SWIG_5(width, height), true) {
  }

  public int GetX() {
    int ret = IronSightEnginePINVOKE.RectI_GetX(swigCPtr);
    return ret;
  }

  public int SetX(int val) {
    int ret = IronSightEnginePINVOKE.RectI_SetX(swigCPtr, val);
    return ret;
  }

  public int GetY() {
    int ret = IronSightEnginePINVOKE.RectI_GetY(swigCPtr);
    return ret;
  }

  public int SetY(int val) {
    int ret = IronSightEnginePINVOKE.RectI_SetY(swigCPtr, val);
    return ret;
  }

  public int GetWidth() {
    int ret = IronSightEnginePINVOKE.RectI_GetWidth(swigCPtr);
    return ret;
  }

  public int SetWidth(int val) {
    int ret = IronSightEnginePINVOKE.RectI_SetWidth(swigCPtr, val);
    return ret;
  }

  public int GetHeight() {
    int ret = IronSightEnginePINVOKE.RectI_GetHeight(swigCPtr);
    return ret;
  }

  public int SetHeight(int val) {
    int ret = IronSightEnginePINVOKE.RectI_SetHeight(swigCPtr, val);
    return ret;
  }

  public int x {
    set {
      IronSightEnginePINVOKE.RectI_x_set(swigCPtr, value);
    } 
    get {
      int ret = IronSightEnginePINVOKE.RectI_x_get(swigCPtr);
      return ret;
    } 
  }

  public int y {
    set {
      IronSightEnginePINVOKE.RectI_y_set(swigCPtr, value);
    } 
    get {
      int ret = IronSightEnginePINVOKE.RectI_y_get(swigCPtr);
      return ret;
    } 
  }

  public int width {
    set {
      IronSightEnginePINVOKE.RectI_width_set(swigCPtr, value);
    } 
    get {
      int ret = IronSightEnginePINVOKE.RectI_width_get(swigCPtr);
      return ret;
    } 
  }

  public int height {
    set {
      IronSightEnginePINVOKE.RectI_height_set(swigCPtr, value);
    } 
    get {
      int ret = IronSightEnginePINVOKE.RectI_height_get(swigCPtr);
      return ret;
    } 
  }

  public int left() {
    int ret = IronSightEnginePINVOKE.RectI_left(swigCPtr);
    return ret;
  }

  public int top() {
    int ret = IronSightEnginePINVOKE.RectI_top(swigCPtr);
    return ret;
  }

  public int right() {
    int ret = IronSightEnginePINVOKE.RectI_right(swigCPtr);
    return ret;
  }

  public int bottom() {
    int ret = IronSightEnginePINVOKE.RectI_bottom(swigCPtr);
    return ret;
  }

  public static RectI Empty() {
    RectI ret = new RectI(IronSightEnginePINVOKE.RectI_Empty(), true);
    return ret;
  }

  public RectI Offset(int offsetx, int offsety) {
    RectI ret = new RectI(IronSightEnginePINVOKE.RectI_Offset__SWIG_0(swigCPtr, offsetx, offsety), true);
    return ret;
  }

  public RectI Offset(PointI offset) {
    RectI ret = new RectI(IronSightEnginePINVOKE.RectI_Offset__SWIG_1(swigCPtr, PointI.getCPtr(offset)), true);
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Contains(int x, int y) {
    bool ret = IronSightEnginePINVOKE.RectI_Contains__SWIG_0(swigCPtr, x, y);
    return ret;
  }

  public bool Contains(PointI p) {
    bool ret = IronSightEnginePINVOKE.RectI_Contains__SWIG_1(swigCPtr, PointI.getCPtr(p));
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Intersects(RectI r) {
    bool ret = IronSightEnginePINVOKE.RectI_Intersects(swigCPtr, RectI.getCPtr(r));
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public /*cstype*/ string ToString() {
	string ret = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(IronSightEnginePINVOKE.RectI_ToString(swigCPtr));
	return ret;
}

  public void Inflate(SizeI s) {
    IronSightEnginePINVOKE.RectI_Inflate__SWIG_0(swigCPtr, SizeI.getCPtr(s));
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Inflate(float width, float height) {
    IronSightEnginePINVOKE.RectI_Inflate__SWIG_1(swigCPtr, width, height);
  }

}
