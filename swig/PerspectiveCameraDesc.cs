//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PerspectiveCameraDesc : CameraDesc {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PerspectiveCameraDesc(global::System.IntPtr cPtr, bool cMemoryOwn) : base(IronSightEnginePINVOKE.PerspectiveCameraDesc_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PerspectiveCameraDesc obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PerspectiveCameraDesc() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          IronSightEnginePINVOKE.delete_PerspectiveCameraDesc(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PerspectiveCameraDesc() : this(IronSightEnginePINVOKE.new_PerspectiveCameraDesc(), true) {
  }

  public float lensradius {
    set {
      IronSightEnginePINVOKE.PerspectiveCameraDesc_lensradius_set(swigCPtr, value);
    } 
    get {
      float ret = IronSightEnginePINVOKE.PerspectiveCameraDesc_lensradius_get(swigCPtr);
      return ret;
    } 
  }

  public float focaldistance {
    set {
      IronSightEnginePINVOKE.PerspectiveCameraDesc_focaldistance_set(swigCPtr, value);
    } 
    get {
      float ret = IronSightEnginePINVOKE.PerspectiveCameraDesc_focaldistance_get(swigCPtr);
      return ret;
    } 
  }

  public float fov {
    set {
      IronSightEnginePINVOKE.PerspectiveCameraDesc_fov_set(swigCPtr, value);
    } 
    get {
      float ret = IronSightEnginePINVOKE.PerspectiveCameraDesc_fov_get(swigCPtr);
      return ret;
    } 
  }

}
