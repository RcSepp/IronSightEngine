//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IHUD : IRenderable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal IHUD(global::System.IntPtr cPtr, bool cMemoryOwn) : base(IronSightEnginePINVOKE.IHUD_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IHUD obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IHUD() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          IronSightEnginePINVOKE.delete_IHUD(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public virtual Result CreateElement(ITexture tex, int x, int y, DockType dock, Color color, int zorder, SWIGTYPE_p_p_IImageElement element, SWIGTYPE_p_void elementuser) {
		Result ret = new Result(IronSightEnginePINVOKE.IHUD_CreateElement__SWIG_0(swigCPtr, ITexture.getCPtr(tex), x, y, (int)dock, Color.getCPtr(color), zorder, SWIGTYPE_p_p_IImageElement.getCPtr(element), SWIGTYPE_p_void.getCPtr(elementuser)), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual Result CreateElement(ITexture tex, int x, int y, DockType dock, Color color, int zorder, SWIGTYPE_p_p_IImageElement element) {
		Result ret = new Result(IronSightEnginePINVOKE.IHUD_CreateElement__SWIG_1(swigCPtr, ITexture.getCPtr(tex), x, y, (int)dock, Color.getCPtr(color), zorder, SWIGTYPE_p_p_IImageElement.getCPtr(element)), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual Result CreateElement(ITexture tex, int x, int y, DockType dock, Color color, int zorder) {
		Result ret = new Result(IronSightEnginePINVOKE.IHUD_CreateElement__SWIG_2(swigCPtr, ITexture.getCPtr(tex), x, y, (int)dock, Color.getCPtr(color), zorder), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual Result CreateElement(ITexture tex, int x, int y, DockType dock, Color color) {
		Result ret = new Result(IronSightEnginePINVOKE.IHUD_CreateElement__SWIG_3(swigCPtr, ITexture.getCPtr(tex), x, y, (int)dock, Color.getCPtr(color)), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual Result CreateElement(ITexture tex, int x, int y, DockType dock, Color color, RectI subregion, int zorder, SWIGTYPE_p_p_IImageElement element, SWIGTYPE_p_void elementuser) {
		Result ret = new Result(IronSightEnginePINVOKE.IHUD_CreateElement__SWIG_4(swigCPtr, ITexture.getCPtr(tex), x, y, (int)dock, Color.getCPtr(color), RectI.getCPtr(subregion), zorder, SWIGTYPE_p_p_IImageElement.getCPtr(element), SWIGTYPE_p_void.getCPtr(elementuser)), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual Result CreateElement(ITexture tex, int x, int y, DockType dock, Color color, RectI subregion, int zorder, SWIGTYPE_p_p_IImageElement element) {
		Result ret = new Result(IronSightEnginePINVOKE.IHUD_CreateElement__SWIG_5(swigCPtr, ITexture.getCPtr(tex), x, y, (int)dock, Color.getCPtr(color), RectI.getCPtr(subregion), zorder, SWIGTYPE_p_p_IImageElement.getCPtr(element)), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual Result CreateElement(ITexture tex, int x, int y, DockType dock, Color color, RectI subregion, int zorder) {
		Result ret = new Result(IronSightEnginePINVOKE.IHUD_CreateElement__SWIG_6(swigCPtr, ITexture.getCPtr(tex), x, y, (int)dock, Color.getCPtr(color), RectI.getCPtr(subregion), zorder), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual Result CreateElement(ITexture tex, int x, int y, DockType dock, Color color, RectI subregion) {
		Result ret = new Result(IronSightEnginePINVOKE.IHUD_CreateElement__SWIG_7(swigCPtr, ITexture.getCPtr(tex), x, y, (int)dock, Color.getCPtr(color), RectI.getCPtr(subregion)), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual Result CreateElement(/*cstype*/ string text, SWIGTYPE_p_LPD3DFONT font, int x, int y, DockType dock, Color color, SizeI size, int zorder, uint textflags, SWIGTYPE_p_p_ITextElement element, SWIGTYPE_p_void elementuser) {
		Result ret = new Result(IronSightEnginePINVOKE.IHUD_CreateElement__SWIG_8(swigCPtr, new IronSightEnginePINVOKE.SWIGStringMarshal(text).swigCPtr, SWIGTYPE_p_LPD3DFONT.getCPtr(font), x, y, (int)dock, Color.getCPtr(color), SizeI.getCPtr(size), zorder, textflags, SWIGTYPE_p_p_ITextElement.getCPtr(element), SWIGTYPE_p_void.getCPtr(elementuser)), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual Result CreateElement(/*cstype*/ string text, SWIGTYPE_p_LPD3DFONT font, int x, int y, DockType dock, Color color, SizeI size, int zorder, uint textflags, SWIGTYPE_p_p_ITextElement element) {
		Result ret = new Result(IronSightEnginePINVOKE.IHUD_CreateElement__SWIG_9(swigCPtr, new IronSightEnginePINVOKE.SWIGStringMarshal(text).swigCPtr, SWIGTYPE_p_LPD3DFONT.getCPtr(font), x, y, (int)dock, Color.getCPtr(color), SizeI.getCPtr(size), zorder, textflags, SWIGTYPE_p_p_ITextElement.getCPtr(element)), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual Result CreateElement(/*cstype*/ string text, SWIGTYPE_p_LPD3DFONT font, int x, int y, DockType dock, Color color, SizeI size, int zorder, uint textflags) {
		Result ret = new Result(IronSightEnginePINVOKE.IHUD_CreateElement__SWIG_10(swigCPtr, new IronSightEnginePINVOKE.SWIGStringMarshal(text).swigCPtr, SWIGTYPE_p_LPD3DFONT.getCPtr(font), x, y, (int)dock, Color.getCPtr(color), SizeI.getCPtr(size), zorder, textflags), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual Result CreateElement(/*cstype*/ string text, SWIGTYPE_p_LPD3DFONT font, int x, int y, DockType dock, Color color, SizeI size, int zorder) {
		Result ret = new Result(IronSightEnginePINVOKE.IHUD_CreateElement__SWIG_11(swigCPtr, new IronSightEnginePINVOKE.SWIGStringMarshal(text).swigCPtr, SWIGTYPE_p_LPD3DFONT.getCPtr(font), x, y, (int)dock, Color.getCPtr(color), SizeI.getCPtr(size), zorder), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual Result CreateElement(/*cstype*/ string text, SWIGTYPE_p_LPD3DFONT font, int x, int y, DockType dock, Color color, SizeI size) {
		Result ret = new Result(IronSightEnginePINVOKE.IHUD_CreateElement__SWIG_12(swigCPtr, new IronSightEnginePINVOKE.SWIGStringMarshal(text).swigCPtr, SWIGTYPE_p_LPD3DFONT.getCPtr(font), x, y, (int)dock, Color.getCPtr(color), SizeI.getCPtr(size)), true);
		//
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public virtual void RemoveElement(IElement element) {
    IronSightEnginePINVOKE.IHUD_RemoveElement(swigCPtr, IElement.getCPtr(element));
  }

  public virtual void RegisterMouseDownListener(IElement element, SWIGTYPE_p_f_p_IElement__void cbk) {
    IronSightEnginePINVOKE.IHUD_RegisterMouseDownListener(swigCPtr, IElement.getCPtr(element), SWIGTYPE_p_f_p_IElement__void.getCPtr(cbk));
  }

  public virtual void RegisterMouseUpListener(IElement element, SWIGTYPE_p_f_p_IElement__void cbk) {
    IronSightEnginePINVOKE.IHUD_RegisterMouseUpListener(swigCPtr, IElement.getCPtr(element), SWIGTYPE_p_f_p_IElement__void.getCPtr(cbk));
  }

  public virtual void RegisterMouseMoveListener(IElement element, SWIGTYPE_p_f_p_IElement__void cbk) {
    IronSightEnginePINVOKE.IHUD_RegisterMouseMoveListener(swigCPtr, IElement.getCPtr(element), SWIGTYPE_p_f_p_IElement__void.getCPtr(cbk));
  }

  public virtual void RegisterMouseEnterListener(IElement element, SWIGTYPE_p_f_p_IElement__void cbk) {
    IronSightEnginePINVOKE.IHUD_RegisterMouseEnterListener(swigCPtr, IElement.getCPtr(element), SWIGTYPE_p_f_p_IElement__void.getCPtr(cbk));
  }

  public virtual void RegisterMouseLeaveListener(IElement element, SWIGTYPE_p_f_p_IElement__void cbk) {
    IronSightEnginePINVOKE.IHUD_RegisterMouseLeaveListener(swigCPtr, IElement.getCPtr(element), SWIGTYPE_p_f_p_IElement__void.getCPtr(cbk));
  }

  public virtual void Update() {
    IronSightEnginePINVOKE.IHUD_Update(swigCPtr);
  }

  public virtual ISpriteContainer GetSpriteContainer() {
    global::System.IntPtr cPtr = IronSightEnginePINVOKE.IHUD_GetSpriteContainer(swigCPtr);
    ISpriteContainer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ISpriteContainer(cPtr, false);
    return ret;
  }

  public virtual void Release() {
    IronSightEnginePINVOKE.IHUD_Release(swigCPtr);
  }

  public IImageElement XCreateElement(ITexture tex, int x, int y, DockType dock, Color color, int zorder) {
    global::System.IntPtr cPtr = IronSightEnginePINVOKE.IHUD_XCreateElement__SWIG_0(swigCPtr, ITexture.getCPtr(tex), x, y, (int)dock, Color.getCPtr(color), zorder);
    IImageElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new IImageElement(cPtr, false);
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IImageElement XCreateElement(ITexture tex, int x, int y, DockType dock, Color color) {
    global::System.IntPtr cPtr = IronSightEnginePINVOKE.IHUD_XCreateElement__SWIG_1(swigCPtr, ITexture.getCPtr(tex), x, y, (int)dock, Color.getCPtr(color));
    IImageElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new IImageElement(cPtr, false);
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IImageElement XCreateElement(ITexture tex, int x, int y, DockType dock, Color color, RectI subregion, int zorder) {
    global::System.IntPtr cPtr = IronSightEnginePINVOKE.IHUD_XCreateElement__SWIG_2(swigCPtr, ITexture.getCPtr(tex), x, y, (int)dock, Color.getCPtr(color), RectI.getCPtr(subregion), zorder);
    IImageElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new IImageElement(cPtr, false);
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IImageElement XCreateElement(ITexture tex, int x, int y, DockType dock, Color color, RectI subregion) {
    global::System.IntPtr cPtr = IronSightEnginePINVOKE.IHUD_XCreateElement__SWIG_3(swigCPtr, ITexture.getCPtr(tex), x, y, (int)dock, Color.getCPtr(color), RectI.getCPtr(subregion));
    IImageElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new IImageElement(cPtr, false);
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public enum ElementType {
    ET_IMAGE,
    ET_TEXT
  }

}
