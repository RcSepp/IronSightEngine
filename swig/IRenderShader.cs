//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IRenderShader : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IRenderShader(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IRenderShader obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IRenderShader() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          IronSightEnginePINVOKE.delete_IRenderShader(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual SWIGTYPE_p_LPD3D11EFFECTVARIABLE GetVariableBySemantic(string semantic) {
    SWIGTYPE_p_LPD3D11EFFECTVARIABLE ret = new SWIGTYPE_p_LPD3D11EFFECTVARIABLE(IronSightEnginePINVOKE.IRenderShader_GetVariableBySemantic(swigCPtr, semantic), true);
    return ret;
  }

  public virtual SWIGTYPE_p_LPD3D11EFFECTVARIABLE GetVariableByName(string name) {
    SWIGTYPE_p_LPD3D11EFFECTVARIABLE ret = new SWIGTYPE_p_LPD3D11EFFECTVARIABLE(IronSightEnginePINVOKE.IRenderShader_GetVariableByName(swigCPtr, name), true);
    return ret;
  }

  public virtual SWIGTYPE_p_IEffectScalarVariable GetScalarVariable(/*cstype*/ string semantic) {
    global::System.IntPtr cPtr = IronSightEnginePINVOKE.IRenderShader_GetScalarVariable(swigCPtr, new IronSightEnginePINVOKE.SWIGStringMarshal(semantic).swigCPtr);
    SWIGTYPE_p_IEffectScalarVariable ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_IEffectScalarVariable(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_IEffectVectorVariable GetVectorVariable(/*cstype*/ string semantic) {
    global::System.IntPtr cPtr = IronSightEnginePINVOKE.IRenderShader_GetVectorVariable(swigCPtr, new IronSightEnginePINVOKE.SWIGStringMarshal(semantic).swigCPtr);
    SWIGTYPE_p_IEffectVectorVariable ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_IEffectVectorVariable(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_IEffectMatrixVariable GetMatrixVariable(/*cstype*/ string semantic) {
    global::System.IntPtr cPtr = IronSightEnginePINVOKE.IRenderShader_GetMatrixVariable(swigCPtr, new IronSightEnginePINVOKE.SWIGStringMarshal(semantic).swigCPtr);
    SWIGTYPE_p_IEffectMatrixVariable ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_IEffectMatrixVariable(cPtr, false);
    return ret;
  }

  public virtual Result SetTechnique(uint techidx) {
		Result ret = new Result(IronSightEnginePINVOKE.IRenderShader_SetTechnique(swigCPtr, techidx), true);
		//
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

}
