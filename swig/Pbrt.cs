//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Pbrt : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Pbrt(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Pbrt obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Pbrt() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          IronSightEnginePINVOKE.delete_Pbrt(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public Pbrt() : this(IronSightEnginePINVOKE.new_Pbrt__SWIG_0(), true) {
  }

  public Pbrt(IPbrt src) : this(IronSightEnginePINVOKE.new_Pbrt__SWIG_1(IPbrt.getCPtr(src)), true) {
  }

  public IPbrt __deref__() {
    global::System.IntPtr cPtr = IronSightEnginePINVOKE.Pbrt___deref__(swigCPtr);
    IPbrt ret = (cPtr == global::System.IntPtr.Zero) ? null : new IPbrt(cPtr, false);
    return ret;
  }

  public void Sync(EnginePtr exeeng, Direct3D exed3d, OpenGL exeogl, Havok exehvk, GuiFactory exegui, Forms exefms, DirectIpt exedip, WinIpt exewip, FFmpeg exeffm, CryptoPP execpp, ID3Lib exeid3, WinAudio exewad, XAudio2 exexa2, WinMidi exemid, WinSock exewsk, AsyncWorkers exeaws, SQLite exesql, HaruPdf exepdf, RayTracer exertr, Pbrt exepbrt, PythonScriptEngine exepse, Console execle) {
    IronSightEnginePINVOKE.Pbrt_Sync(swigCPtr, EnginePtr.getCPtr(exeeng), Direct3D.getCPtr(exed3d), OpenGL.getCPtr(exeogl), Havok.getCPtr(exehvk), GuiFactory.getCPtr(exegui), Forms.getCPtr(exefms), DirectIpt.getCPtr(exedip), WinIpt.getCPtr(exewip), FFmpeg.getCPtr(exeffm), CryptoPP.getCPtr(execpp), ID3Lib.getCPtr(exeid3), WinAudio.getCPtr(exewad), XAudio2.getCPtr(exexa2), WinMidi.getCPtr(exemid), WinSock.getCPtr(exewsk), AsyncWorkers.getCPtr(exeaws), SQLite.getCPtr(exesql), HaruPdf.getCPtr(exepdf), RayTracer.getCPtr(exertr), Pbrt.getCPtr(exepbrt), PythonScriptEngine.getCPtr(exepse), Console.getCPtr(execle));
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public Result CreateDirectRenderView(IOutputWindow wnd) {
		Result ret = new Result(IronSightEnginePINVOKE.Pbrt_CreateDirectRenderView(swigCPtr, IOutputWindow.getCPtr(wnd)), true);
		//
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public void RemoveDirectRenderView() {
    IronSightEnginePINVOKE.Pbrt_RemoveDirectRenderView(swigCPtr);
  }

  public void Render() {
    IronSightEnginePINVOKE.Pbrt_Render__SWIG_0(swigCPtr);
  }

  public Result Render(IOutputWindow wnd, FilterDesc filter, RendererDesc renderer) {
		Result ret = new Result(IronSightEnginePINVOKE.Pbrt_Render__SWIG_1(swigCPtr, IOutputWindow.getCPtr(wnd), FilterDesc.getCPtr(filter), RendererDesc.getCPtr(renderer)), true);
		//
		if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
		return ret;
	}

  public void Release() {
    IronSightEnginePINVOKE.Pbrt_Release(swigCPtr);
  }

}
