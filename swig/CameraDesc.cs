//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class CameraDesc : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CameraDesc(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CameraDesc obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CameraDesc() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          IronSightEnginePINVOKE.delete_CameraDesc(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PbrtCameraId id {
    get {
      PbrtCameraId ret = (PbrtCameraId)IronSightEnginePINVOKE.CameraDesc_id_get(swigCPtr);
      return ret;
    } 
  }

  public float shutteropen {
    set {
      IronSightEnginePINVOKE.CameraDesc_shutteropen_set(swigCPtr, value);
    } 
    get {
      float ret = IronSightEnginePINVOKE.CameraDesc_shutteropen_get(swigCPtr);
      return ret;
    } 
  }

  public float shutterclose {
    set {
      IronSightEnginePINVOKE.CameraDesc_shutterclose_set(swigCPtr, value);
    } 
    get {
      float ret = IronSightEnginePINVOKE.CameraDesc_shutterclose_get(swigCPtr);
      return ret;
    } 
  }

  public float frameaspectratio {
    set {
      IronSightEnginePINVOKE.CameraDesc_frameaspectratio_set(swigCPtr, value);
    } 
    get {
      float ret = IronSightEnginePINVOKE.CameraDesc_frameaspectratio_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_float screenwindow {
    set {
      IronSightEnginePINVOKE.CameraDesc_screenwindow_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = IronSightEnginePINVOKE.CameraDesc_screenwindow_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

}
