//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Quaternion : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Quaternion(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Quaternion obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Quaternion() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          IronSightEnginePINVOKE.delete_Quaternion(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

	public static Quaternion operator*(Quaternion q0, Quaternion q1)
	{
		return q0.mul(q1);
	}

  public float x {
    set {
      IronSightEnginePINVOKE.Quaternion_x_set(swigCPtr, value);
    } 
    get {
      float ret = IronSightEnginePINVOKE.Quaternion_x_get(swigCPtr);
      return ret;
    } 
  }

  public float y {
    set {
      IronSightEnginePINVOKE.Quaternion_y_set(swigCPtr, value);
    } 
    get {
      float ret = IronSightEnginePINVOKE.Quaternion_y_get(swigCPtr);
      return ret;
    } 
  }

  public float z {
    set {
      IronSightEnginePINVOKE.Quaternion_z_set(swigCPtr, value);
    } 
    get {
      float ret = IronSightEnginePINVOKE.Quaternion_z_get(swigCPtr);
      return ret;
    } 
  }

  public float w {
    set {
      IronSightEnginePINVOKE.Quaternion_w_set(swigCPtr, value);
    } 
    get {
      float ret = IronSightEnginePINVOKE.Quaternion_w_get(swigCPtr);
      return ret;
    } 
  }

  public Quaternion() : this(IronSightEnginePINVOKE.new_Quaternion__SWIG_0(), true) {
  }

  public Quaternion(float x, float y, float z, float w) : this(IronSightEnginePINVOKE.new_Quaternion__SWIG_1(x, y, z, w), true) {
  }

  public Quaternion(SWIGTYPE_p_float xyzw) : this(IronSightEnginePINVOKE.new_Quaternion__SWIG_2(SWIGTYPE_p_float.getCPtr(xyzw)), true) {
  }

  private Quaternion mul(Quaternion factor) {
    Quaternion ret = new Quaternion(IronSightEnginePINVOKE.Quaternion_mul(swigCPtr, Quaternion.getCPtr(factor)), true);
    if (IronSightEnginePINVOKE.SWIGPendingException.Pending) throw IronSightEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Vector3 ComputeAxisWrapper() {
    global::System.IntPtr cPtr = IronSightEnginePINVOKE.Quaternion_ComputeAxisWrapper(swigCPtr);
    Vector3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new Vector3(cPtr, false);
    return ret;
  }

  public float ComputeAngleWrapper() {
    float ret = IronSightEnginePINVOKE.Quaternion_ComputeAngleWrapper(swigCPtr);
    return ret;
  }

}
