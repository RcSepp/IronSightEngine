1) Forms:
1.1) Currently:
Forms can be created using Engine::CreateForms() or normally.
If created using CreateForms(), all WinForms will be shown between PostInit() and Init(). Also forms will be released on RemoveForms() or when CreateForms() gets called again.
1.2) Bugs:
None
1.3) Solution
Just allocate and initialize Forms in CreateForms() (later also do so with Direct3D, ...).
Forms, and other such classes, must then all be created in Engine::CreateXXX()
Rename the rest of CreateForms() to RegisterWinClass() and create seperate UnregisterWinClass() function (still release Forms in the engine's destructor).

2) DLLs:
Create DLLs instead of static libraries on Release-Builds.
Also on Release-Builds, link DLLs inside Engine::CreateXXX() (and don't include static libs!).

3) DirectX -> Direct3D
For seperation of graphic, input, audio and other libraries, remove the library DirectX.
Its whole functionality will be covered by the Direct3D class (including the holding of all subclasses like Camera, Hud, Object, PostProcessEffect, ...)

4) Result
Move all special error functions to the corresponding libraries (inside new files called ResultEx.cpp / ResultEx.h).
Include ResultEx.h in the main header of each corresponding library.
Include DxErr.lib in the corresponding ResultEx.h file.

The engine has to work on every target PC, even without DirectX, ASIO, FFmpeg, ...